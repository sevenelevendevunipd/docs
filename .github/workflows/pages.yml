name: Build documents with Pandoc and upload to GitHub Pages

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  deployments: write
  id-token: write
  pages: write
  pull-requests: write
  statuses: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_MARKDOWN: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Build website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Restore mtime
        uses: chetan/git-restore-mtime-action@v1
      - name: Build with Pandoc
        run: ./build.sh
      - name: Generate Directory Listings
        uses: jayanta525/github-pages-directory-listing@v2.0.0
        with:
          FOLDER: docs
      - uses: actions/upload-artifact@v3
        with:
          name: docs_site
          path: ./docs
  deploy_pr:
    name: Deploy PR to Vercel
    needs: [build, lint]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs_site
      - name: Deploy to Vercel Action
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          GITHUB_TOKEN: ${{ github.token }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  deploy:
    name: Deploy to Pages
    if: github.ref == 'refs/heads/master'
    concurrency:
      group: "pages"
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, lint]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs_site
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  archive:
    name: Archive tagged documents
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build, lint]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs_site
      - name: Zip docs
        run: zip -r --exclude='*index.html' docs.zip .
      - name: Create release
        run: gh release create $GITHUB_REF_NAME -t $GITHUB_REF_NAME docs.zip -R sevenelevendevunipd/docs
        env:
          GITHUB_TOKEN: ${{ github.token }}
